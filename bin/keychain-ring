#!/bin/bash

# keychain-ring -- Query keychain status and autoload keys
#
## LICENSE
#
# Copyright 2011,2012 hellekin <hellekin@riseup.net>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>,
# or, from the package source directory, run: make license
#

PROGNAME=${0##*/}

usage() {
cat <<EOD
${PROGNAME} -h
${PROGNAME} [-q] [-n] [-s|+s] [-g|+g]

Query keychain status and autoload keys

As of v0.2.0, --no-load is the default, to accomodate users
with a lot of keys.  See ChangeLog.

  -h, --help        Display this notice
  -n, --no-load     Do not load any keys (default, implies -s -g)
  -q, --quiet       Do not output anything
  -s, --skip-ssh    Ignore SSH keys (default)
  +s, --load-ssh    Load SSH Keys   (overrides -n)
  -g, --skip-gpg    Ignore GPG Keys (default)
  +g, --load-gpg    Load GPG Keys (overrides -n)

EOD
}

gpg_keys() {
  if ((gpg)); then
    gpg --list-secret-keys --with-key-data | \
    sed -e '/^sec/!d;s/^.*[0-9]*:[A-F0-9]*\([A-F0-9]\{8\}\)\:.*$/\1/' | \
      tr "\n" " "
  fi
}

ssh_keys()
{
  if ((ssh)); then
    find $HOME/.ssh -type f -perm 0600 -name id_rsa\* -print 2>/dev/null
  fi
}

quiet=
gpg=0
ssh=0

while test -n "$1"
do
  case "$1" in
    -h|--help) usage; exit 0;;
    -n|--no-load) gpg=0; ssh=0;;
    -q|--quiet) quiet='-q';;
    -g|--skip-gpg) gpg=0;;
    +g|--load-gpg) gpg=1;;
    -s|--skip-ssh) ssh=0;;
    +s|--load-ssh) ssh=1;;
     *) ;;
  esac
  shift
done

test -z $HOSTNAME                         && HOSTNAME=$(uname -n)
test -s $HOME/.keychain/$HOSTNAME-sh      && . $HOME/.keychain/$HOSTNAME-sh
test -s $HOME/.keychain/$HOSTNAME-sh-gpg  && . $HOME/.keychain/$HOSTNAME-sh-gpg

$(which keychain) $quiet $(ssh_keys) $(gpg_keys)
